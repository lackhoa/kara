; params: $stream, $index
(set! stream-ref
    '(if (= $1 0)
         (stream-car $0)
         (stream-ref (stream-cdr $0) (- $1 1))))

; params: $function, $stream
(set! stream-map
    '(if (stream-null? $1)
         empty-stream
         (stream-cons ($0 (stream-car $1))
                      `(stream-map ',$0 ',(stream-cdr $1)))))

; params: $function, $stream
(set! stream-mapfx
    '(if (stream-null? $1)
         empty-stream
         (seq ($0 (stream-car $1))
              `(stream-mapfx ',$0 ',(stream-cdr $1)))))

; params: $stream
(set! stream-car '(car $0))

; params: $stream
(set! stream-cdr '((cadr $0)))

; params: $first, $(the function representing the rest of the stream)
(set! stream-cons '`(,$0 ,$1))

(set! empty-stream '())

(set! stream-null? '(null? $0))

; params: $low, $high
(set! range
    '(if (> $0 $1)
         empty-stream
         (stream-cons $0 `(range ,(+ 1 $0) ,$1))))

; Testing
; (set! new-range (range 5 10000000))
; (stdisplay-n "=> 10")
; (stream-ref new-range 5)
; (stdisplay-n "=> 81")
; (stream-ref (stream-map '(* $0 $0) new-range) 4)
; (stdisplay-n "=> #t")
; (stream-car (stream-cdr (stream-map odd? (range 10000 1000000))))
