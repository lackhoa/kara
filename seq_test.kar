(load "seq.kar")

(stdisplay-n "in-seq? => #t")
(in-seq? 3 (list 1 2 3))

(stdisplay-n "in-seq? => #f")
(in-seq? 4 (list 1 2 3))

(def new-range (range 5 10))
(stdisplay-n "Range => 10")
(seq-ref new-range 5)

(stdisplay-n "Reduce => 120")
(reduce * 1 (list 1 2 3 4 5))

(stdisplay-n "Mapping 0 => 81")
(seq-ref (map square new-range) 4)

(stdisplay-n "Reduce + map + filter => 225")
(def (prod-of-squares-of-odds seq)
    (reduce *
            1
            (map square
                 (filter odd? seq))))
(prod-of-squares-of-odds (list 1 2 3 4 5))

(def permu (permutations (list 1 2 3)))
(stdisplay-n "seq->list => Permutation for (1 2 3)")
(seq->list permu)

(stdisplay-n "append: 2 -> 5 to 11 -> 14")
(seq->list (append (range 2 6) (range 11 14)))

(stdisplay-n "Product")
(def ingredient (list (range 0 3) (range  4 6) (range 7 10)))
(seq->list (product ingredient))

(stdisplay-n "Powerset of {A, B, C, D}")
(powerset '(A B C D))

(def (scale factor seq)
    (map (lam (x) (* x factor)) seq))
(stdisplay-n "Interleaving => (0 0 1 11 2 22 3 33 ...)")
(interleave (range 1 9) (scale 11 (range 1 9)))

"All lazy tests passed (or at least they all ran)"
