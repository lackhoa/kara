#lang racket
(require "lang/kara.rkt")

(def topo1
  '(((0 0 0 0 1 0)) ((0 1 1)) ((0 1 0)) ((0 0)) ((0 0 1)) ((0 0 0 1 1 1)) ((0 0 0 1 1 0)) ((0 0 0 1 1)) ((0 0 0 1 0 1 1)) ((0 0 0 1 0 1 0)) ((0 0 0 1 0 1)) ((0 0 0 1 0 0)) ((0 0 0 1 0)) ((0 0 0 1)) ((0 0 0 0 1 1)) (()) ((0 0 0 0 1)) ((0 0 0 0 0 1 1)) ((0 0 0 0 0 1 0)) ((0 0 0 0 0 1)) ((0 0 0 0 0 0)) ((0 0 0 0 0)) ((0 0 0 0)) ((0 0 0)) ((0 1)) ((0))))

(def topo2
  '(((0 1 0) (0 0 1 0)) (()) ((0 0 0)) ((0 0 0 1 1)) ((0 0)) ((0)) ((0 0 0 1)) ((0 1 1) (0 0 1 1)) ((0 0 0 0 1)) ((0 0 0 0)) ((0 0 0 1 1 1) (0 0 0 1 0 1 1) (0 0 0 0 0 1 1)) ((0 0 0 1 0 1 0) (0 0 0 0 1 1) (0 0 0 0 0 1 0)) ((0 0 0 1 0 1) (0 0 0 0 0 1)) ((0 1) (0 0 1)) ((0 0 0 1 1 0) (0 0 0 1 0 0) (0 0 0 0 1 0) (0 0 0 0 0 0)) ((0 0 0 1 0) (0 0 0 0 0))))

(def topo
  '(((0 0 0 1 1 0) (0 0 0 1 0 0) (0 0 0 0 1 0) (0 0 0 0 0 0)) ((0 1 1) (0 0 1 1)) ((0 1 0) ) ((0 0)) ((0 1) (0 0 1)) ((0 0 0 1 1 1) (0 0 0 1 0 1 1) (0 0 0 0 0 1 1)) ((0 0 0 1 1 0)) ((0 0 0 1 1)) ((0 0 0 1 0 1 1)) ((0 0 0 1 0 1 0) (0 0 0 0 1 1) (0 0 0 0 0 1 0)) ((0 0 0 1 0 1) (0 0 0 0 0 1)) ((0 0 0 1 0 0)) ((0 0 0 1 0) (0 0 0 0 0)) ((0 0 0 1)) ((0 0 0 0 1 1)) (()) ((0 0 0 0 1)) ((0 0 0 0 0 1 1)) ((0 0 0 0 0 1 0)) ((0 0 0 0 0 1)) ((0 0 0 0 0 0)) ((0 0 0 0 0)) ((0 0 0 0)) ((0 0 0)) ((0 1)) ((0))))

(def (process topo)
  (foldr append null topo))

(displayln (length (process topo1)))
(displayln (length (process topo2)))

(set-symmetric-difference (process topo1)
                          (process topo))
